using DSPAlgorithms.Algorithms;
using DSPAlgorithms.DataStructures;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace DSPComponentsUnitTest
{
    [TestClass]
    public class DC_ComponentTestCases
    {
        [TestMethod]
        public void DC_ComponentTestcase()
        {
            DC_Component dc = new DC_Component();

            var expectedOutput = new Signal(new List<float>() { -49.5000000000000f, -48.5000000000000f, -47.5000000000000f, -46.5000000000000f, -45.5000000000000f, -44.5000000000000f, -43.5000000000000f, -42.5000000000000f, -41.5000000000000f, -40.5000000000000f, -39.5000000000000f, -38.5000000000000f, -37.5000000000000f, -36.5000000000000f, -35.5000000000000f, -34.5000000000000f, -33.5000000000000f, -32.5000000000000f, -31.5000000000000f, -30.5000000000000f, -29.5000000000000f, -28.5000000000000f, -27.5000000000000f, -26.5000000000000f, -25.5000000000000f, -24.5000000000000f, -23.5000000000000f, -22.5000000000000f, -21.5000000000000f, -20.5000000000000f, -19.5000000000000f, -18.5000000000000f, -17.5000000000000f, -16.5000000000000f, -15.5000000000000f, -14.5000000000000f, -13.5000000000000f, -12.5000000000000f, -11.5000000000000f, -10.5000000000000f, -9.50000000000000f, -8.50000000000000f, -7.50000000000000f, -6.50000000000000f, -5.50000000000000f, -4.50000000000000f, -3.50000000000000f, -2.50000000000000f, -1.50000000000000f, -0.500000000000000f, 0.500000000000000f, 1.50000000000000f, 2.50000000000000f, 3.50000000000000f, 4.50000000000000f, 5.50000000000000f, 6.50000000000000f, 7.50000000000000f, 8.50000000000000f, 9.50000000000000f, 10.5000000000000f, 11.5000000000000f, 12.5000000000000f, 13.5000000000000f, 14.5000000000000f, 15.5000000000000f, 16.5000000000000f, 17.5000000000000f, 18.5000000000000f, 19.5000000000000f, 20.5000000000000f, 21.5000000000000f, 22.5000000000000f, 23.5000000000000f, 24.5000000000000f, 25.5000000000000f, 26.5000000000000f, 27.5000000000000f, 28.5000000000000f, 29.5000000000000f, 30.5000000000000f, 31.5000000000000f, 32.5000000000000f, 33.5000000000000f, 34.5000000000000f, 35.5000000000000f, 36.5000000000000f, 37.5000000000000f, 38.5000000000000f, 39.5000000000000f, 40.5000000000000f, 41.5000000000000f, 42.5000000000000f, 43.5000000000000f, 44.5000000000000f, 45.5000000000000f, 46.5000000000000f, 47.5000000000000f, 48.5000000000000f, 49.5000000000000f }, false);
            dc.InputSignal = new Signal(new List<float>() { 1f, 2f, 3f, 4f, 5f, 6f, 7f, 8f, 9f, 10f, 11f, 12f, 13f, 14f, 15f, 16f, 17f, 18f, 19f, 20f, 21f, 22f, 23f, 24f, 25f, 26f, 27f, 28f, 29f, 30f, 31f, 32f, 33f, 34f, 35f, 36f, 37f, 38f, 39f, 40f, 41f, 42f, 43f, 44f, 45f, 46f, 47f, 48f, 49f, 50f, 51f, 52f, 53f, 54f, 55f, 56f, 57f, 58f, 59f, 60f, 61f, 62f, 63f, 64f, 65f, 66f, 67f, 68f, 69f, 70f, 71f, 72f, 73f, 74f, 75f, 76f, 77f, 78f, 79f, 80f, 81f, 82f, 83f, 84f, 85f, 86f, 87f, 88f, 89f, 90f, 91f, 92f, 93f, 94f, 95f, 96f, 97f, 98f, 99f, 100f }, false);

            dc.Run();

            Assert.IsTrue(UnitTestUtitlities.SignalsSamplesAreEqual(expectedOutput.Samples, dc.OutputSignal.Samples));

        }
    }
}
